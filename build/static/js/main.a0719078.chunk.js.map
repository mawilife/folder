{"version":3,"sources":["main.jsx","newAlarm.jsx","navbar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["MainPage","state","alarmStrings","alarm","hour","minute","box","Fragment","Object","keys","this","props","alarms","map","key","index","className","expandable","item","index2","width","createText","ripple","modifier","onClick","deleteAlarm","to","selectForNew","Component","NewAlarm","time","day","setState","selectedDay","verticalAlign","value","onChange","event","target","ref","switchToMinuteOnHourSelect","hour24Mode","insertAlarm","history","push","withRouter","NavBar","App","monday","tuesday","wednesday","thursday","friday","saturday","sunday","splice","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0719078.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { List, ListItem, ListHeader, Col, Button } from \"react-onsenui\";\nimport { Link } from \"react-router-dom\";\nclass MainPage extends Component {\n  state = {\n    alarmStrings: [\n      \"Pazartesi\",\n      \"Salı\",\n      \"Çarşamba\",\n      \"Perşembe\",\n      \"Cuma\",\n      \"Cumartesi\",\n      \"Pazar\"\n    ]\n  };\n  createText(alarm) {\n    return `Saat : ${alarm.hour}:${alarm.minute} Kutu:${alarm.box}`;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <List>\n          <ListHeader>Alarmlar</ListHeader>\n          {Object.keys(this.props.alarms).map((key, index) => (\n            <ListItem\n              key={`day-${index}`}\n              className=\"expanded\"\n              expandable={true}\n            >\n              <div className=\"left\">{this.state.alarmStrings[index]}</div>\n              <div className=\"expandable-content\">\n                <List>\n                  {this.props.alarms[key].map((item, index2) => (\n                    <ListItem key={`alarm-${index2}`}>\n                      <Col width=\"80%\">{this.createText(item)}</Col>\n                      <Col width=\"20%\">\n                        <Button\n                          ripple={true}\n                          modifier=\"light\"\n                          onClick={() => this.props.deleteAlarm(key, index2)}\n                        >\n                          Sil\n                        </Button>\n                      </Col>\n                    </ListItem>\n                  ))}\n                  <ListItem>\n                    <Col width=\"100%\">\n                      <Link\n                        to=\"/New\"\n                        onClick={() => this.props.selectForNew(key)}\n                      >\n                        <Button ripple={true} modifier=\"material--flat\">\n                          Yeni Ekle\n                        </Button>\n                      </Link>\n                    </Col>\n                  </ListItem>\n                </List>\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport {\n  Select,\n  Row,\n  Col,\n  Button,\n  ListHeader,\n  List,\n  ListItem\n} from \"react-onsenui\";\nimport { withRouter } from \"react-router-dom\";\nimport Time from \"react-timekeeper\";\nclass NewAlarm extends Component {\n  state = {\n    time: { hour: 0, minute: 0 },\n    day: \"monday\",\n    box: \"1\"\n  };\n  componentDidMount() {\n    this.setState({ day: this.props.selectedDay });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <List>\n          <ListHeader>Yeni Alarm</ListHeader>\n          <ListItem>\n            <Row verticalAlign=\"center\">\n              <Col width=\"30%\">Gün:</Col>\n              <Col width=\"70%\">\n                {\" \"}\n                <Select\n                  modifier=\"underbar\"\n                  value={this.state.day}\n                  onChange={event => this.setState({ day: event.target.value })}\n                  ref=\"day\"\n                >\n                  <option value=\"monday\">Pazartesi</option>\n                  <option value=\"tuesday\">Salı</option>\n                  <option value=\"wednesday\">Çarşamba</option>\n                  <option value=\"thursday\">Perşembe</option>\n                  <option value=\"friday\">Cuma</option>\n                  <option value=\"saturday\">Cumartesi</option>\n                  <option value=\"sunday\">Pazar</option>\n                </Select>\n              </Col>\n            </Row>\n          </ListItem>\n          <ListItem>\n            <Row verticalAlign=\"center\">\n              <Col width=\"30%\">Kutu:</Col>\n              <Col width=\"70%\">\n                {\" \"}\n                <Select\n                  modifier=\"underbar\"\n                  value={this.state.box}\n                  onChange={event => this.setState({ box: event.target.value })}\n                  ref=\"box\"\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                </Select>\n              </Col>\n            </Row>\n          </ListItem>\n          <ListItem>\n            <Row verticalAlign=\"center\">\n              <Col width=\"100%\">\n                <Time\n                  switchToMinuteOnHourSelect\n                  hour24Mode\n                  time={this.state.time}\n                  onChange={time => {\n                    this.setState({\n                      time: { hour: time.hour, minute: time.minute }\n                    });\n                  }}\n                ></Time>\n              </Col>\n            </Row>\n          </ListItem>\n          <ListItem>\n            <Row verticalAlign=\"center\">\n              <Col width=\"40%\"></Col>\n              <Col width=\"50%\">\n                <Button\n                  onClick={() => {\n                    this.props.insertAlarm(this.state.day, {\n                      box: this.state.box,\n                      hour: this.state.time.hour,\n                      minute: this.state.time.minute\n                    });\n                    this.props.history.push(\"/\");\n                  }}\n                >\n                  Ekle\n                </Button>\n              </Col>\n            </Row>\n          </ListItem>\n        </List>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(NewAlarm);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Button } from \"react-onsenui\";\nclass NavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Col width=\"32%\" verticalAlign=\"center\">\n          <Link to=\"/\">\n            <Button modifier=\"material--flat\">Alarmlar</Button>\n          </Link>\n        </Col>\n        <Col width=\"32%\" verticalAlign=\"center\">\n          <Link to=\"/New\">\n            <Button modifier=\"material--flat\">Yeni Alarm</Button>\n          </Link>\n        </Col>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\nimport { Page, Toolbar } from \"react-onsenui\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport MainPage from \"./main\";\nimport NewAlarm from \"./newAlarm\";\nimport NavBar from \"./navbar\";\nclass App extends React.Component {\n  state = {\n    alarms: {\n      monday: [\n        {\n          hour: 12,\n          minute: 55,\n          box: 1\n        },\n        {\n          hour: 13,\n          minute: 11,\n          box: 1\n        }\n      ],\n      tuesday: [],\n      wednesday: [\n        {\n          hour: 17,\n          minute: 3,\n          box: 1\n        }\n      ],\n      thursday: [],\n      friday: [],\n      saturday: [],\n      sunday: []\n    },\n    selectedDay: \"monday\"\n  };\n  deleteAlarm = (day, index) => {\n    let alarms = this.state.alarms;\n    alarms[day].splice(index, 1);\n    this.setState({ alarms });\n  };\n  selectForNew = day => {\n    this.setState({ selectedDay: day });\n  };\n  insertAlarm = (day, alarm) => {\n    let alarms = this.state.alarms;\n    alarms[day].push(alarm);\n    this.setState({ alarms });\n  };\n  render() {\n    return (\n      <BrowserRouter>\n        <Page>\n          <Toolbar>\n            <NavBar></NavBar>\n          </Toolbar>\n          <div className=\"page__background\"></div>\n          <div className=\"page__content\">\n            <Switch>\n            <Route\n                path=\"/New\"\n                component={() => (\n                  <NewAlarm\n                    insertAlarm={this.insertAlarm}\n                    selectedDay={this.state.selectedDay}\n                  ></NewAlarm>\n                )}\n              ></Route>\n              <Route\n                path=\"/\"\n                component={() => (\n                  <MainPage\n                    alarms={this.state.alarms}\n                    deleteAlarm={this.deleteAlarm}\n                    selectForNew={this.selectForNew}\n                  ></MainPage>\n                )}\n              ></Route>\n              \n            </Switch>\n          </div>\n        </Page>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}